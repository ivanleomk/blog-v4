---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
import { getCollection, type CollectionEntry } from "astro:content";
import SEOHeader from "../components/SEOHeader.astro";

const posts = await getCollection("blog");

const postsByYear = posts.reduce(
  (acc, post) => {
    const year = post.data.publishedAt.getFullYear();
    if (!acc[year]) {
      acc[year] = [];
    }
    acc[year].push(post);
    return acc;
  },
  {} as Record<number, CollectionEntry<"blog">[]>
);

const sortedYears = Object.keys(postsByYear).sort(
  (a, b) => Number(b) - Number(a)
);

const sortedPosts = sortedYears.map((year) => [
  year,
  postsByYear[year as unknown as number].sort(
    (a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf()
  ),
]);

const socials = {
  Twitter: "https://twitter.com/ivanleomk",
  GitHub: "https://github.com/ivanleomk",
  LinkedIn: "https://www.linkedin.com/in/ivanleo/",
};
---

<!doctype html>
<html lang="en">
  <head>
    <SEOHeader />
  </head>
  <body class="max-w-6xl mx-auto px-4 py-8">
    <Header />
    <div class="grid grid-cols-5 gap-8">
      <div class="col-span-2">
        <section class="mb-16">
          <img
            src="/profile_pic.jpg"
            alt="Profile picture"
            class="rounded-full mb-4 w-48 h-48"
          />
          <p class="text-gray-700 mb-4 max-w-xl">
            Research Engineer at 567 Labs. Helping companies build LLM products
            and maintaining <a
              href="https://python.useinstructor.com/"
              class="text-gray-600 hover:text-gray-900 underline">Instructor</a
            > on the side. Massive adventure junkie and outdoorsy person.
          </p>
          <div class="flex space-x-4">
            {
              ["Twitter", "GitHub", "LinkedIn"].map((platform) => (
                <a
                  target="_blank"
                  rel="noopener noreferrer"
                  href={socials[platform as keyof typeof socials]}
                  class="text-gray-600 hover:text-gray-900"
                >
                  {platform}
                </a>
              ))
            }
          </div>
        </section>
      </div>
      <div class="col-span-3">
        <section>
          {
            sortedPosts.map(([year, posts]) => (
              <div class="mb-12">
                <h2 class="text-4xl font-bold mb-6">{year}</h2>
                <ul class="space-y-4">
                  {(posts as CollectionEntry<"blog">[]).map((post) => (
                    <li class="flex items-baseline">
                      <a
                        href={`/blog/${post.slug}/`}
                        class="text-gray-600 text-md hover:text-gray-800 mb-2"
                      >
                        {post.data.title}
                      </a>

                      <div class="flex-grow border-b border-gray-300 mx-2" />
                      <span class="text-gray-400 text-sm whitespace-nowrap">
                        {post.data.publishedAt.toLocaleDateString("en-us", {
                          year: "numeric",
                          month: "short",
                          day: "numeric",
                        })}
                      </span>
                    </li>
                  ))}
                </ul>
              </div>
            ))
          }
        </section>
      </div>
    </div>

    <Footer />
  </body>
</html>
